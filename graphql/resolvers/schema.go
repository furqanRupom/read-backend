package graphqlresolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"
	"fmt"
	graphql1 "read-backend/graphql"
)

func (r *mutationResolver) CreateNewAuthor(ctx context.Context, input graphql1.NewAuthor) (graphql1.Author, error) {
	panic(fmt.Errorf("not implemented: CreateNewAuthor - createNewAuthor"))
}

func (r *mutationResolver) ConfirmAuthor(ctx context.Context, input graphql1.ConfirmAuthor) (bool, error) {
	panic(fmt.Errorf("not implemented: ConfirmAuthor - confirmAuthor"))
}

func (r *queryResolver) GetAuthors(ctx context.Context, id string) (*graphql1.Author, error) {
	panic(fmt.Errorf("not implemented: GetAuthors - getAuthors"))
}

func (r *Resolver) Mutation() graphql1.MutationResolver { return &mutationResolver{r} }

func (r *Resolver) Query() graphql1.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
